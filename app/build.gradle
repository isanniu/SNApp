apply plugin: 'com.android.application'
Properties props = new Properties()
props.load(new FileInputStream(file("signing.properties")))
android {
    signingConfigs {
        release {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
//            signingConfig signingConfigs.release
        }
    }
}
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId 'com.sanniu.snapp'
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName '1.0.0'
        manifestPlaceholders = [umeng_channel: "development"]
    }
    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries false
    }
    sourceSets.main {
        jniLibs.srcDirs "libs"
    }
    signingConfigs {
        debug {
            storeFile file('../key.keystore')
            storePassword 'sanniu123321'
            keyAlias 'key.keystore'
            keyPassword 'sanniu123321'
        }
        release {
            storeFile file('../key.keystore')
            storePassword 'sanniu123321'
            keyAlias 'key.keystore'
            keyPassword 'sanniu123321'
        }
    }
    buildTypes {
        debug {
            debuggable true
//            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        development {
            // 开发版
        }
        wandoujia {
            // 豌豆荚
        }
        m360 {
            // 360手机助手
        }
        xiaomi {
            // 小米商城
        }
        yingyongbao {
            // 应用宝
        }
        baidu {
            // 百度手机助手
        }
        m91zhushou {
            // 91助手
        }
        hiapk {
            // 安卓市场
        }
        anzhi {
            // 安智网
        }
        jifeng {
            // 机锋网
        }
        googleplay {
            // google play
        }
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [umeng_channel: name]
//        buildConfigField 'String','API_SERVER_URL','"http://www.flysnow.org/"' //defaultConfig需要配置下默认的 在BuildConfig.java中生成一个常量名为API_SERVER_URL的常量定义

    }
    variantFilter { variant ->
        def buildType = variant.buildType.name
        def flavorName = variant.getFlavors().get(0).name
        // 根据构建类型，自动过滤渠道
        if (buildType.equals('debug')) {
            if (flavorName.equals('development')) {
                variant.setIgnore(false)
            } else {
                variant.setIgnore(true)
            }
        } else {
            if (flavorName.equals('development')) {
                variant.setIgnore(true)
            } else {
                variant.setIgnore(false)
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-v${defaultConfig.versionName}.apk")
                fileName = fileName.replace("app", "app_name")
                println "[FileName]: ${fileName}"
                if (variant.buildType.name.equals('release')) {
                    output.outputFile = file("${outputFile.parent}/release/${fileName}")
                } else {
                    output.outputFile = file("${outputFile.parent}/${fileName}")
                }
            }
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.zhy:autolayout:1.3.6'
    compile project(':ncore')
}